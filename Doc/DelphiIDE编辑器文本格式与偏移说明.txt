DelphiIDE编辑器文本格式与偏移说明

CnPack开发组
2019.02.22

Delphi IDE 分三种：Delphi 5 6 7 的 纯 Ansi 版，Delphi 2005 ~ 2007 的 Utf8 版，以及 Delphi 2009 及其以上的 Unicode 版本。
这三种 IDE 的编辑器控件各不相同，所涉及的 OpenTools API 与其他原生接口有很大的不同。

整理了一个表（获得的 Text 的 Tab 键展开情况还待补充）：

=====================================================================================================
                            Delphi 5/6/7           Delphi 2005~2007         Delphi 2009 以上
-----------------------------------------------------------------------------------------------------
EditControl的LineText属性   AnsiString             AnsiString + Utf8        UnicodeString（Utf16）
代表当前光标所在的行文字 
-----------------------------------------------------------------------------------------------------
EditControl的               AnsiString             AnsiString + Utf8        UnicodeString（Utf16）
GetTextAtLine方法 
-----------------------------------------------------------------------------------------------------
IOTAEditReader接口的        AnsiString             AnsiString + Utf8        AnsiString + Utf8
GetText方法
-----------------------------------------------------------------------------------------------------
IOTAEditBlock接口的         AnsiString             AnsiString + Utf8        UnicodeString（Utf16）
Text属性/GetText方法
-----------------------------------------------------------------------------------------------------
EditControl的               Ansi、1 开始           Utf8、1 开始             Utf8、1 开始
GetAttributeAtPos所需偏移
-----------------------------------------------------------------------------------------------------
 TOTAEditPos的Col           Ansi、1 开始           Utf8、1 开始             Ansi、1 开始
（EditView的CursorPos）
-----------------------------------------------------------------------------------------------------
IOTAEditPosition的相对      Ansi、0 开始           Utf8、0 开始             Utf8、0 开始
Move方法所使用的Col                                （为 1 时也均可移动一个汉字字符，其余不对位的情况光标往左靠）
-----------------------------------------------------------------------------------------------------
IOTAEditPosition的绝对      Ansi、1 开始           Utf8、1 开始             Utf8、1 开始
Move/Real方法所使用的Col    （三类 IDE 中，Col 在不对位的情况下光标均会往左靠）
-----------------------------------------------------------------------------------------------------
IOTAEditPosition的          字符、1 开始           字符、1 开始             字符、1 开始
BackspaceDelete的Num        （三类 IDE 中均删整字符，可以理解为 Utf16）
-----------------------------------------------------------------------------------------------------
TOTACharPos的CharIndex      Ansi、0 开始           Utf8、0 开始             Ansi、0 开始
（Tab键算一个字符）                                                        （有宽字符时由ConvertPos转换而来的结果有混乱）
-----------------------------------------------------------------------------------------------------
EditView的CharPosToPos      Ansi、0开始            Utf8、0 开始             当前行之前Utf8、当前行内Ansi，0 开始
转换而来的文件内的线性Pos                                                  （有宽字符时线性结果必然混乱）
-----------------------------------------------------------------------------------------------------
编辑器状态栏上的行列显示    三类 IDE 统一，为 1 开始的 Ansi，单字节字符占一列，一汉字占两列
=====================================================================================================
CnPack语法解析器            AnsiChar               WideChar                 WideChar
所使用的字符偏移
-----------------------------------------------------------------------------------------------------
CnPack读入编辑器内容至      AnsiChar               WideChar                 WideChar
Stream时使用的格式
-----------------------------------------------------------------------------------------------------
CnPack的 Pascal 语法        列 Ansi                列有 Ansi/Wide           同右
解析器所使用的行列          行列均 0 开始          行列均 1 开始            
-----------------------------------------------------------------------------------------------------
CnPack的 Cpp 语法           列 Ansi                列有 Ansi/Wide           同右
解析器所使用的行列          行列均 1 开始          行列均 1 开始            
-----------------------------------------------------------------------------------------------------
CnPack的 Pascal 结构        列 Ansi                列有 Ansi/Wide           同右
解析器所使用的行列          行列均 0 开始          行列均 0 开始，可展开Tab
-----------------------------------------------------------------------------------------------------
CnPack的 Cpp 结构           列 Ansi                列有 Ansi/Wide           同右     
解析器所使用的行列          行列均 0 开始          行列均 0 开始，可展开Tab          
-----------------------------------------------------------------------------------------------------
CnPack的 Pas/Cpp 结构       不展开Tab              根据IDE设置展开Tab       根据IDE设置展开Tab
解析器是否自行展开Tab       Tab由ConvertPos处理      
-----------------------------------------------------------------------------------------------------
Pas/Cpp Token 的            1 开始的 TOTAEditPos   1 开始的 TOTAEditPos     1 开始的 TOTAEditPos
EditLine/EditCol属性        EditCol为Ansi          EditCol为Utf8            EditCol为Ansi
=====================================================================================================

和当前光标有关的，需要使用 TOTAEditPos 类型的 Col。
结构解析器解析出来的 Token 的行列是基于字符的 Ansi/Wide 值，需要转换成 CharPos 再转换成 EditPos 再存储到 Token 的 EditLine/EditCol 属性里。
以后在要跳转到此 Token 时才能直接使用 EditLine/EditCol。
另外，代码高亮中需要根据 Token 进行重画时，计算重画区域的 EditCol 应该全部使用 Ansi 的（视觉要求），但 D2005~2007 的 EditPos 的 Col 是 Utf8，所以 D2005~2007 下不能直接用 EditCol，另开了一个属性 EditAnsiCol 存储 Ansi 偏移，专门用来重画。

另外，EditControl 的 LineText 属性表示光标所在的当前行的内容，但当本行为空时，无论光标在哪儿，LineText 均返回空，而不是一串空格。

