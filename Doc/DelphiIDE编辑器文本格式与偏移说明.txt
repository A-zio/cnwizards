DelphiIDE编辑器文本格式与偏移说明

CnPack开发组
2016.06.25

Delphi IDE 分三种：Delphi 5 6 7 的 纯 Ansi 版，Delphi 2005 ~ 2007 的 Utf8 版，以及 Delphi 2009 及其以上的 Unicode 版本。
这三种 IDE 的编辑器控件各不相同，所涉及的 OpenTools API 与其他原生接口有很大的不同。

整理了一个表：

=====================================================================================================
                            Delphi 5/6/7           Delphi 2005~2007         Delphi 2009 以上
-----------------------------------------------------------------------------------------------------
EditControl的LineText属性   AnsiString             AnsiString + Utf8        UnicodeString（Utf16）
代表当前光标所在的行文字 
-----------------------------------------------------------------------------------------------------
EditControl的               AnsiString             AnsiString + Utf8        UnicodeString（Utf16）
GetTextAtLine方法 
-----------------------------------------------------------------------------------------------------
EditControl的               Ansi、1 开始           Utf8、1 开始             Utf8、1 开始
GetAttributeAtPos所需偏移
-----------------------------------------------------------------------------------------------------
 TOTAEditPos的Col           Ansi、1 开始           Utf8、1 开始             Ansi、1 开始
（EditView的CursorPos）
-----------------------------------------------------------------------------------------------------
IOTAEditPosition的相对      Ansi、0 开始           Utf8、0 开始             Utf8、0 开始
Move方法所使用的Col                                （为 1 时也均可移动一个汉字字符，其余不对位的情况光标往左靠）
-----------------------------------------------------------------------------------------------------
IOTAEditPosition的绝对      Ansi、1 开始           Utf8、1 开始             Utf8、1 开始
Move/Real方法所使用的Col    （三类 IDE 中，Col 在不对位的情况下光标均会往左靠）
-----------------------------------------------------------------------------------------------------
IOTAEditPosition的          字符、1 开始           字符、1 开始             字符、1 开始
BackspaceDelete的Num        （三类 IDE 中均删整字符，可以理解为 Utf16）
-----------------------------------------------------------------------------------------------------
TOTACharPos的CharIndex      Ansi、0 开始           Utf8、0 开始             Ansi、0 开始
（Tab键算一个字符）                                                        （有宽字符时由ConvertPos转换而来的结果有混乱）
-----------------------------------------------------------------------------------------------------
编辑器状态栏上的行列显示    三类 IDE 统一，为 1 开始的 Ansi，单字节字符占一列，一汉字占两列
=====================================================================================================
CnPack语法解析器            AnsiChar               WideChar                 WideChar
所使用的字符偏移
-----------------------------------------------------------------------------------------------------
CnPack读入编辑器内容至      AnsiChar               WideChar                 WideChar
Stream时使用的格式
-----------------------------------------------------------------------------------------------------
CnPack的 Pascal 语法        列 Ansi                列有 Ansi/Wide           同右
解析器所使用的行列          行列均 0 开始          行列均 1 开始            
-----------------------------------------------------------------------------------------------------
CnPack的 Cpp 语法           列 Ansi                列有 Ansi/Wide           同右
解析器所使用的行列          行列均 1 开始          行列均 1 开始            
-----------------------------------------------------------------------------------------------------
CnPack的Pascal结构          列 Ansi                列有 Ansi/Wide           同右
解析器所使用的行列          行列均 0 开始          行列均 0 开始，可展开Tab
-----------------------------------------------------------------------------------------------------
CnPack的Cpp结构             列 Ansi                列有 Ansi/Wide           同右     
解析器所使用的行列          行列均 0 开始          行列均 0 开始，可展开Tab          
-----------------------------------------------------------------------------------------------------
CnPack的Pas/Cpp结构         不展开Tab              根据IDE设置展开Tab       根据IDE设置展开Tab
解析器是否自行展开Tab       Tab由ConvertPos处理      
-----------------------------------------------------------------------------------------------------
Pas/Cpp Token 的            1 开始的 TOTAEditPos   1 开始的 TOTAEditPos     1 开始的 TOTAEditPos
EditLine/EditCol属性        EditCol为Ansi          EditCol为Utf8            EditCol为Ansi
=====================================================================================================

和当前光标有关的，需要使用 TOTAEditPos 类型的 Col。
结构解析器解析出来的Token的行列是基于字符的Ansi/Wide值，需要转换成CharPos再转换成EditPos再存储到Token的EditLine/EditCol属性里。
以后在要跳转到此Token时才能直接使用EditLine/EditCol。
另外，代码高亮中需要根据Token进行重画时，计算重画区域的EditCol应该全部使用Ansi的（视觉要求），但D2005~2007的EditPos的Col是Utf8，
所以D2005~2007下，不能直接用EditCol，另开了一个属性EditAnsiCol存储Ansi偏移，专门用来重画。

